# 객체의 틀을 기반으로 객체를 찍어낸다

# 예1)
# 인스타그램 유저 객체:
# 속성) 이름, 이메일주소, 비밀번호, 팔로우 목록, 팔로워 목록
# 행동) 자기소개하기, 팔로우하기

# ---> 모든 유저 객체들은 이런 속성과 행동을 지닌다. 즉 유저객체의 틀을 정한 것.
# 앞으로의 유저는 이 틀을 기반으로 만들면 됨

# 예2)
# 붕어빵을 만들 때 같은 붕어빵 틀(객체 틀) 1개로 붕어빵(객체)를 계속 만들어낸다

# 객체의 틀을 "클래스"라 하고,
# 이 틀로 만든 결과물을 "객체"라고 한다

# "클래스로 객체를 만든다"
# "클래스로 인스턴스를 만든다"

# 객체 = 인스턴스 (같다고 봐도 무방)

# <클래스 만들기>
# 클래스이름 첫글자는 항상 대문자!!!!
# class (띄어쓰기) + 클래스이름:
# (들여쓰기)  내용
# 내용: 속성과 행동을 적는다.

# <객체 만들기>
# 변수이름(아무거나 원하는 거) = 클래스이름()
# ---> 클래스이름() 을 통해서 인스턴스가 만들어진다.
# ---> 그러면 변수 이름이 인스턴스를 가르키게 된다.


class User:
    pass

user1 = User()
user2 = User()
user3 = User()

# user1, user2, user3 은 User 인스턴스이긴 하지만, 서로 다 다른 존재(서로 다른 인스턴스)



# <클래스의 속성 추가하기>
# 변수와 비슷하다. 예(변수 사용법)) name = "김대위"

# <인스턴스 변수 정의하기>
# 인스턴스 이름. 속성이름(인스턴스 변수) = "속성에 넣을 값"

user1.name = "김대위"    # user1 인스턴스의 이름을 나타내는 name 속성을 추가했음. 속성 값으로는 "김대위"를 넣음.
user1.email = "captain@codeit.kr"
user1.password = "12345"

user2.name = "강영훈"
user2.email = "younghoon@codeit.kr"
user2.password = "67890"

user3.name = "최지웅"
user3.email = "jiwoong@codeit.kr"
user3.password = "13579"

# 각 유저 인스턴스는 같은 이름의 속성을 갖고 있어도 서로 다른 값을 지닌다.
# 즉, user1 user2 user3 는 속성을 공유하는게 아니라 각자 개인적으로 가지고 있다.
# 이렇게 인스턴스가 개인적으로 갖고있는 속성을 "인스턴스 변수"라고 한다.
# 여기서 name, email, password는 모두 인스턴스 변수이다.


# <인스턴스 변수 사용하기>
# 인스턴스 이름.인스턴스 변수 이름
print(user1.email)
print(user2.password)

print(user1.age)     # age라는 인스턴스 변수를 정의한 적 없어서 에러남
# 인스턴스 변수를 사용하려면 꼭 그 전에 미리 정의를 해놔야 한다.
