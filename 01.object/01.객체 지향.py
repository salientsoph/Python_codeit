# 객체:
# 1. 속성과 행동으로 이루어진 존재.
# 2. 살아가면서 보는 모든 존재.

# 예1) 자동차 객체
# 속성) 색깔, 의자, 차 높이
# 행동) 시동이 걸리는 행동, 앞으로 나아가는 행동 등
# -> 즉 자동차는 객체임

# 예2) 인스타그램 유저 객체
# 속성) 이메일주소, 비밀번호, 친구목록
# 행동) 좋아요 누르기, 친구 추가하기 등
# -> 즉 유저는 객체로 본다

# 모든 게 객체인가요? yes. 현실에 존재하든, 가상으로 존재하든 속성과 행동을 떠올릴 수 있다면 객체다.


# 객체 지향 프로그래밍이란?
# 프로그램을 여러 개의 독립된 객체들과 그 객체들 간의 상호작용으로 파악하는 프로그래밍 접근법이다.
# -> 프로그램을 객체들과 객체들 간의 소통으로 바라보는 것

# 총게임의 객체에 어떤 객체가 필요할까?
# -> 게임 캐릭터 객체, 총 객체, 총알 객체

# 게임 캐릭터 객체의 속성: id, 현재 사용중인 총, 체력, 목숨
# 행동: 총을 발사한다, 달린다, 체력이 0이 되면 죽는다

# 총 객체의 속성: 모델명, 무게, 장전된 총알 개수
# 행동: 총알을 발사한다.

# 총알 객체의 속성: 공격력
# 행동: 총알을 맞은 캐릭터의 체력을 깎는다

# 이 세가지는 어떻게 소통할까?
# 캐릭터가 총한테 명령하고, 총의 속성 중 장전된 총알 개수가 1개 줄어든다.
# 총알이 발사되고 다른 캐릭터에 닿으면 그 객체에게 체력을 깎도록 한다.

# 객체 지향적으로 설계: "모델링"을 했다

# 객체 지향 프로그래밍으로 프로그램을 만들려면
# 1. 프로그램에 어떤 객체들이 필요할지 정한다
# 2. 객체들의 속성과 행동을 정한다
# 3. 객체들이 서로 어떻게 소통할지 정한다